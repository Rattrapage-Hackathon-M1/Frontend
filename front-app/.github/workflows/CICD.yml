name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ORGANIZATION: Rattrapage-Hackathon-M1

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile
      - name: Setup Node
        uses: actions/setup-node@v4
      - name: Install dependencies
        run: npm install
      - name: Lint npm
        run: npm run lint

  build:
    needs: [lint]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

  test:
    needs: [lint]
    runs-on: ubuntu-22.04
    env:
      IMAGE_NAME: "front-image"
      CONTAINER_NAME: "front-container"
      CONTAINER_PORT: "5173"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: build image
        run: docker image build --tag="${IMAGE_NAME}" ./
      - name: run container
        run: docker container run -d -p "${CONTAINER_PORT}":5173 --name "${CONTAINER_NAME}" "${IMAGE_NAME}"
      - name: Wait container startup
        run: sleep 5
      - name: http test request
        run: curl http://127.0.0.1:"${CONTAINER_PORT}"/
      - name: stop container
        run: docker container stop "${CONTAINER_NAME}"
      - name: remove container
        run: docker container rm "${CONTAINER_NAME}"

  package-and-deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build, test]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/rattrapage-hackathon-m1/frontend:${{ github.ref_name }}
